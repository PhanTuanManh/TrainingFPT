@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model TrainingFPT.Models.TrainerTopicViewModel
@{
    ViewData["Title"] = "TrainerTopic Page";
    ViewData["namePage"] = "TrainerTopic";
    ViewBag.report = false;

    Layout = "~/Views/Shared/_LayoutMain.cshtml";
    bool statusAdd = Convert.ToBoolean(TempData["saveStatus"]);
    bool statusDel = Convert.ToBoolean(TempData["statusDel"]);
    bool statusUpdate = Convert.ToBoolean(TempData["updateStatus"]);
}

<div class="row">
    <div class="col-sm-12 col-md-12">
        <h4> This is List TrainerTopic</h4>
        <a class="btn btn-primary" href="@Url.Action("Add","TrainerTopic")"> Add + </a>
        @if (TempData["saveStatus"] != null)
        {
            @if (statusAdd)
            {
                <div class="text-success my-3"> Add successfully</div>
            }
            else
            {
                <div class="text-danger my-3"> Add Failure</div>
            }
        }
        @if (TempData["statusDel"] != null)
        {
            @if (statusDel)
            {
                <div class="text-success my-3"> Delete successfully</div>
            }
            else
            {
                <div class="text-danger my-3"> Delete Failure</div>
            }
        }
        @if (TempData["UpdateStatus"] != null)
        {
            @if (statusUpdate)
            {
                <div class="text-success my-3"> Update successfully</div>
            }
            else
            {
                <div class="text-danger my-3"> Update Failure</div>
            }
        }

        <table class="table table-striped table-bordered mt-3">
            <thead class="table-primary">
                <tr>
                   
                    <th>UserName</th>
                    <th>TopicName</th>
                    <th>CreatedAt</th>
                    <th width="10%" class="text-center">Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.TrainerTopicDetailList)
                {
                    <tr>
                        <td>@item.UserId</td>
                        <td>@item.TopicName</td>
                        <td>@item.CreatedAt</td>
                        <td><a class="btn btn-info" href="@Url.Action("Edit", "TrainerTopic", new {userId =item.UserId, topicId = item.TopicId})">Edit</a></td>
                        
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
